---
- name: Change permissions of the SSH private key
  hosts: localhost
  tasks:
    - name: Ensure the private key has correct permissions
      file:
        path: /home/ubuntu/terraform-key-pair.pem
        mode: '0400'

- name: Webserver Setup
  hosts: webservers
  become: yes
  tasks:
    - name: Install Apache2
      ansible.builtin.apt:
        name: apache2
        state: present
        update_cache: yes

    - name: Start and enable Apache2 service
      ansible.builtin.service:
        name: apache2
        state: started
        enabled: yes

    - name: Copy Index File
      ansible.builtin.copy:
        src: ./index.html
        dest: /var/www/html/
        backup: yes

- name: Setup Virtual Environment on DB Server
  hosts: dbservers
  become: yes
  tasks:
    - name: Install necessary packages for building mysqlclient
      ansible.builtin.apt:
        name:
          - build-essential
          - python3-dev
          - libmariadb-dev
          - pkg-config
          - mariadb-server
          - python3-venv
        state: present
        update_cache: yes

    - name: Create virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv /opt/myenv
        creates: /opt/myenv

    - name: Install mysqlclient in virtual environment
      ansible.builtin.command:
        cmd: /opt/myenv/bin/pip install mysqlclient
        creates: /opt/myenv/bin/mysqlclient

    - name: Verify the virtual environment
      ansible.builtin.command:
        cmd: /opt/myenv/bin/python3 --version

- name: DB Setup
  hosts: dbservers
  become: yes
  vars:
    ansible_python_interpreter: /opt/myenv/bin/python3  # Use the virtual environment Python interpreter
    dbname: accounts
    dbusername: myuser
    dbpass: mypassword

  tasks:
    - debug:
        var: dbname

    - debug:
        msg: "{{ dbname }} is the database name"

    - name: Create a new database with name 'accounts'
      community.mysql.mysql_db:
        name: "{{ dbname }}"
        state: present

    - name: Create MySQL user
      community.mysql.mysql_user:
        name: "{{ dbusername }}"
        password: "{{ dbpass }}"
        state: present

    - name: Grant privileges to MySQL user
      community.mysql.mysql_user:
        name: "{{ dbusername }}"
        password: "{{ dbpass }}"
        priv: "{{ dbname }}.*:ALL"
        state: present
      register: dbout

    - name: Print out for DB tasks
      debug:
        var: dbout
